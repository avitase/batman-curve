from batman_curve import batman
import pytest
import numpy as np


def approval_test():
    upper_exp = np.array(
        [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, 0.57835563, 0.85877015, 1.06342941, 1.23072459,
         1.37436854, 1.50116613, 1.61508996, 1.71870195, 1.81377016, 1.90157644, 1.98308565, 2.05904576, 2.1300505,
         2.19658048, 2.25903109, 2.3177321, 2.3729618, 2.42495738, 2.47392277, 2.5200346, 2.56344688, 2.60429461,
         2.64269671, 2.67875836, 2.44350051, 1.6975483, 1.37889202, 1.17294676, 1.03082972, 0.93293173, 0.86906194,
         0.83317979, 0.82142592, 0.83123358, 0.86087746, 0.90922765, 0.97561185, 1.88888889, 2.93181818, 2.4469697,
         2.25, 2.25, 2.25, 2.25, 2.25, 2.25, 2.4469697, 2.93181818, 1.88888889, 0.97561185, 0.90922765, 0.86087746,
         0.83123358, 0.82142592, 0.83317979, 0.86906194, 0.93293173, 1.03082972, 1.17294676, 1.37889202, 1.6975483,
         2.44350051, 2.67875836, 2.64269671, 2.60429461, 2.56344688, 2.5200346, 2.47392277, 2.42495738, 2.3729618,
         2.3177321, 2.25903109, 2.19658048, 2.1300505, 2.05904576, 1.98308565, 1.90157644, 1.81377016, 1.71870195,
         1.61508996, 1.50116613, 1.37436854, 1.23072459, 1.06342941, 0.85877015, 0.57835563, np.nan, np.nan, np.nan,
         np.nan, np.nan, np.nan, np.nan])

    lower_exp = np.array(
        [np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, -0.57835563, -0.85877015, -1.06342941, -1.23072459,
         -1.37436854, -1.50116613, -1.61508996, -1.71870195, -1.81377016, -1.90157644, -1.98308565, -2.05904576,
         -2.1300505, -2.19658048, -2.25903109, -2.3177321, -2.3729618, -2.42495738, -2.17139057, -1.81633816,
         -1.61865659, -1.48572044, -1.39670259, -1.34330068, -1.32192306, -1.33161542, -1.37361559, -1.45193905,
         -1.57580132, -1.76909328, -2.16281895, -1.87366809, -1.6975397, -1.60308783, -1.55803022, -1.55094354,
         -1.57685847, -1.63394289, -1.72260136, -1.8456605, -2.00988177, -2.23141053, -2.56638274, -2.56638274,
         -2.23141053, -2.00988177, -1.8456605, -1.72260136, -1.63394289, -1.57685847, -1.55094354, -1.55803022,
         -1.60308783, -1.6975397, -1.87366809, -2.16281895, -1.76909328, -1.57580132, -1.45193905, -1.37361559,
         -1.33161542, -1.32192306, -1.34330068, -1.39670259, -1.48572044, -1.61865659, -1.81633816, -2.17139057,
         -2.42495738, -2.3729618, -2.3177321, -2.25903109, -2.19658048, -2.1300505, -2.05904576, -1.98308565,
         -1.90157644, -1.81377016, -1.71870195, -1.61508996, -1.50116613, -1.37436854, -1.23072459, -1.06342941,
         -0.85877015, -0.57835563, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan])

    x = np.linspace(-8, 8, 100)
    upper, lower = batman(x)

    assert np.all(np.isnan(upper) == np.isnan(upper_exp))
    assert np.all(np.isfinite(upper) == np.isfinite(upper_exp))
    assert upper[np.isfinite(upper)] == pytest.approx(upper_exp[np.isfinite(upper_exp)])

    assert np.all(np.isnan(lower) == np.isnan(lower_exp))
    assert np.all(np.isfinite(lower) == np.isfinite(lower_exp))
    assert lower[np.isfinite(lower)] == pytest.approx(lower_exp[np.isfinite(lower_exp)])
